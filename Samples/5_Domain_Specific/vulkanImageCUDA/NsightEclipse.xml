<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE entry SYSTEM "SamplesInfo.dtd">
<entry>
  <name>vulkanImageCUDA</name>
  <cflags>
    <flag>--std=c++11</flag>
  </cflags>
  <cuda_api_list>
    <toolkit>cudaGetMipmappedArrayLevel</toolkit>
    <toolkit>cudaImportExternalSemaphore</toolkit>
    <toolkit>cudaExternalMemoryGetMappedMipmappedArray</toolkit>
    <toolkit>cudaMemcpy</toolkit>
    <toolkit>cudaDestroyExternalMemory</toolkit>
    <toolkit>cudaSignalExternalSemaphoresAsync</toolkit>
    <toolkit>cudaFreeMipmappedArray</toolkit>
    <toolkit>cudaVkSemaphoreSignal</toolkit>
    <toolkit>cudaVkImportImageMem</toolkit>
    <toolkit>cudaDestroySurfaceObject</toolkit>
    <toolkit>cudaImportExternalMemory</toolkit>
    <toolkit>cudaMalloc</toolkit>
    <toolkit>cudaSetDevice</toolkit>
    <toolkit>cudaGetDeviceProperties</toolkit>
    <toolkit>cudaGetDeviceCount</toolkit>
    <toolkit>cudaDestroyTextureObject</toolkit>
    <toolkit>cudaUpdateVkImage</toolkit>
    <toolkit>cudaDestroyExternalSemaphore</toolkit>
    <toolkit>cudaFree</toolkit>
    <toolkit>cudaStreamCreate</toolkit>
    <toolkit>cudaVkSemaphoreWait</toolkit>
    <toolkit>cudaExtent</toolkit>
    <toolkit>cudaVkImportSemaphore</toolkit>
    <toolkit>cudaCreateSurfaceObject</toolkit>
    <toolkit>cudaMallocMipmappedArray</toolkit>
    <toolkit>cudaCreateTextureObject</toolkit>
    <toolkit>cudaWaitExternalSemaphoresAsync</toolkit>
  </cuda_api_list>
  <description><![CDATA[This sample demonstrates Vulkan Image - CUDA Interop. CUDA imports the Vulkan image buffer, performs box filtering over it, and synchronizes with Vulkan through vulkan semaphores imported by CUDA. This sample depends on Vulkan SDK, GLFW3 libraries, for building this sample please refer to "Build_instructions.txt" provided in this sample's directory]]></description>
  <devicecompilation>whole</devicecompilation>
  <includepaths>
    <path>./</path>
    <path>../</path>
    <path>../../../Common</path>
  </includepaths>
  <keyconcepts>
    <concept level="advanced">Graphics Interop</concept>
    <concept level="advanced">CUDA Vulkan Interop</concept>
    <concept level="advanced">Data Parallel Algorithms</concept>
  </keyconcepts>
  <keywords>
    <keyword>CUDA</keyword>
    <keyword>CPP11</keyword>
    <keyword>Image processing</keyword>
    <keyword>Vulkan</keyword>
  </keywords>
  <libraries>
  </libraries>
  <librarypaths>
  </librarypaths>
  <nsight_eclipse>true</nsight_eclipse>
  <primary_file>vulkanImageCUDA.cu</primary_file>
  <required_dependencies>
    <dependency>X11</dependency>
    <dependency>VULKAN</dependency>
  </required_dependencies>
  <scopes>
    <scope>2:Graphics Interop</scope>
    <scope>1:CUDA Advanced Topics</scope>
    <scope>1:CUDA Vulkan Interop</scope>
  </scopes>
  <sm-arch>sm35</sm-arch>
  <sm-arch>sm37</sm-arch>
  <sm-arch>sm50</sm-arch>
  <sm-arch>sm52</sm-arch>
  <sm-arch>sm53</sm-arch>
  <sm-arch>sm60</sm-arch>
  <sm-arch>sm61</sm-arch>
  <sm-arch>sm70</sm-arch>
  <sm-arch>sm72</sm-arch>
  <sm-arch>sm75</sm-arch>
  <sm-arch>sm80</sm-arch>
  <sm-arch>sm86</sm-arch>
  <sm-arch>sm87</sm-arch>
  <supported_envs>
    <env>
      <arch>x86_64</arch>
      <platform>linux</platform>
    </env>
    <env>
      <platform>windows7</platform>
    </env>
    <env>
      <platform>aarch64</platform>
    </env>
    <env>
      <platform>sbsa</platform>
    </env>
  </supported_envs>
  <supported_sm_architectures>
    <include>all</include>
  </supported_sm_architectures>
  <title>Vulkan Image - CUDA Interop</title>
  <type>exe</type>
</entry>
