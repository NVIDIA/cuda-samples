<?xml version="1.0" encoding="UTF-8"?> 
<!DOCTYPE entry SYSTEM "SamplesInfo.dtd">
<entry>
  <name>simpleIPC</name>
  <cuda_api_list>
    <toolkit>cudaDeviceEnablePeerAccess</toolkit>
    <toolkit>cudaIpcOpenEventHandle</toolkit>
    <toolkit>cudaOccupancyMaxActiveBlocksPerMultiprocessor</toolkit>
    <toolkit>cudaStreamCreateWithFlags</toolkit>
    <toolkit>cudaDeviceCanAccessPeer</toolkit>
    <toolkit>cudaMemcpyAsync</toolkit>
    <toolkit>cudaStreamDestroy</toolkit>
    <toolkit>cudaEventCreate</toolkit>
    <toolkit>cudaMalloc</toolkit>
    <toolkit>cudaEventDestroy</toolkit>
    <toolkit>cudaSetDevice</toolkit>
    <toolkit>cudaIpcOpenMemHandle</toolkit>
    <toolkit>cudaGetDeviceProperties</toolkit>
    <toolkit>cudaGetDeviceCount</toolkit>
    <toolkit>cudaIpcGetEventHandle</toolkit>
    <toolkit>cudaGetLastError</toolkit>
    <toolkit>cudaStreamSynchronize</toolkit>
    <toolkit>cudaStreamWaitEvent</toolkit>
    <toolkit>cudaFree</toolkit>
    <toolkit>cudaIpcCloseMemHandle</toolkit>
    <toolkit>cudaEventRecord</toolkit>
    <toolkit>cudaIpcGetMemHandle</toolkit>
    <toolkit>cudaEventSynchronize</toolkit>
  </cuda_api_list>
  <description><![CDATA[This CUDA Runtime API sample is a very basic sample that demonstrates Inter Process Communication with one process per GPU for computation.  Requires Compute Capability 3.0 or higher and a Linux Operating System, or a Windows Operating System.]]></description>
  <devicecompilation>whole</devicecompilation>
  <files>
    <file>../../../Common/helper_multiprocess.cpp</file>
  </files>
  <includepaths>
    <path>./</path>
    <path>../</path>
    <path>../../../Common</path>
  </includepaths>
  <keyconcepts>
    <concept level="basic">CUDA Systems Integration</concept>
    <concept level="basic">Peer to Peer</concept>
    <concept level="basic">InterProcess Communication</concept>
  </keyconcepts>
  <keywords>
    <keyword>GPGPU</keyword>
  </keywords>
  <libraries>
  </libraries>
  <librarypaths>
  </librarypaths>
  <nsight_eclipse>true</nsight_eclipse>
  <primary_file>simpleIPC.cu</primary_file>
  <required_dependencies>
    <dependency>IPC</dependency>
  </required_dependencies>
  <scopes>
    <scope>1:CUDA Basic Topics</scope>
    <scope>1:CUDA Systems Integration</scope>
  </scopes>
  <sm-arch>sm35</sm-arch>
  <sm-arch>sm37</sm-arch>
  <sm-arch>sm50</sm-arch>
  <sm-arch>sm52</sm-arch>
  <sm-arch>sm53</sm-arch>
  <sm-arch>sm60</sm-arch>
  <sm-arch>sm61</sm-arch>
  <sm-arch>sm70</sm-arch>
  <sm-arch>sm72</sm-arch>
  <sm-arch>sm75</sm-arch>
  <sm-arch>sm80</sm-arch>
  <sm-arch>sm86</sm-arch>
  <sm-arch>sm87</sm-arch>
  <sources>
    <extracompilation>../../../Common/helper_multiprocess.cpp</extracompilation>
    <extraheader>../../../Common/helper_multiprocess.h</extraheader>
  </sources>
  <supported_envs>
    <env>
      <arch>x86_64</arch>
      <platform>linux</platform>
    </env>
    <env>
      <arch>ppc64le</arch>
      <platform>linux</platform>
    </env>
    <env>
      <platform>windows7</platform>
    </env>
  </supported_envs>
  <supported_sm_architectures>
    <include>all</include>
  </supported_sm_architectures>
  <title>simpleIPC</title>
  <type>exe</type>
</entry>
